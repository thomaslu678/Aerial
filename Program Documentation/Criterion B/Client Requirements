Requirements:
- data every class is stored, for which grade, 
- data stored for the user, after input, student name, ID, grade, address, class list
- selection: which classes chosen by the student

- allow the user to select
- display the user selections
- GUI, display student info and classes, and select classes

Success Criteria
- student should be able to view their class selection / schedule
- be able to select allowed classes

Basic Test Plan:
- verify if a student is valid, if student ID exists
- verify if student schedule selection meets minimum requirements, one school year, 5-8 classes

Data storage:
- MySQL

10/16/2022

Development plan:
- front-end GUI
- back-end: DB, db schema
- JDBC: connection to db
- how many tables

- Rule-engine
- rule / policy: rules your program must enforce
   - a student of a grade cannot select classes of another 
     grade
- for certain grades: minimum and maximum number of classes


Begin working on the program:
- Java framework: Spring/springboot
- Back-end: MySQL
- Front-end: Angular/react

Design your development plan:
- first step: collect, finalize your requirements
- timeline, functionalities, priority
- talk with teacher about depth of design

Actual implementation:
- playing around with the required programs/software

Agile methodology
